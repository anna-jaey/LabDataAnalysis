[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproducible Data Analysis",
    "section": "",
    "text": "This website provides example pipelines for analysing wet lab data using R, focusing on transparency, reproducibility, and common pitfalls.\ngeneral steps: * look at raw data, QC! * normalisation\n\n\n\nColorimetric Data Analysis (e.g., ELISA, MTT assays)\n\nqPCR Analysis (e.g., Ct values, normalization)"
  },
  {
    "objectID": "index.html#available-workflows",
    "href": "index.html#available-workflows",
    "title": "Reproducible Data Analysis",
    "section": "",
    "text": "Colorimetric Data Analysis (e.g., ELISA, MTT assays)\n\nqPCR Analysis (e.g., Ct values, normalization)"
  },
  {
    "objectID": "colourimetric.html",
    "href": "colourimetric.html",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "This workflow is for experiments, where we don’t have a ‘standard curve’ or calibration curve, that is a serial dilution of known concentrations. Instead, we rely on relative comparisons between experimental groups.\n\n\nFirst, load the necessary libraries.\n\nlibrary(tidyverse)\n\n\n\n\nLoad the raw data:\n\ncolourimetric_df &lt;- read.csv(\"example_data/colorimetric_example_tidy.csv\")\n\nglimpse(colourimetric_df)\n\nRows: 45\nColumns: 4\n$ Experiment &lt;chr&gt; \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Ex…\n$ Group      &lt;chr&gt; \"Group1\", \"Group1\", \"Group1\", \"Group2\", \"Group2\", \"Group2\",…\n$ Replicate  &lt;int&gt; 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,…\n$ Absorbance &lt;dbl&gt; 0.6790, 0.6650, 0.6560, 0.5430, 0.5380, 0.5830, 0.7560, 0.7…\n\n\nThe example data set are Absorbance values, the raw values from the plate reader. This example dataset contains data for three different experiments, four treatment groups. For each experiment and each group there are three technical replicates (pipetting replicates).\n\n\n\nsummary(colourimetric_df)\n\n  Experiment           Group             Replicate   Absorbance    \n Length:45          Length:45          Min.   :1   Min.   :0.0615  \n Class :character   Class :character   1st Qu.:1   1st Qu.:0.5380  \n Mode  :character   Mode  :character   Median :2   Median :0.6790  \n                                       Mean   :2   Mean   :0.5694  \n                                       3rd Qu.:3   3rd Qu.:0.7450  \n                                       Max.   :3   Max.   :0.9170  \n\n\nAny missing values should be examined to determine if they result from experimental errors. There are no missing values in the example data.\n\n\n\nTo see the distribution of absorbance values across different groups and experiments, plot:\n\nylimit &lt;- max(colourimetric_df$Absorbance)*1.1 # use the max absorbance value for upper y limit\nggplot(colourimetric_df, aes(x=Group, y=Absorbance, colour=Experiment, shape=as.factor(Replicate))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(aes(group = Experiment),\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x),\n               fun.max = function(x) mean(x) + sd(x),\n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  labs(color = 'Experiment', shape = 'Replicate') +\n  scale_y_continuous(limits = c(0, ylimit))+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nGraphing one point for each data point, using colours and shapes to distinguish between the experiments and the technical replicates. QC check: data falls within the linear range of the assay (in the example the linear range is between 0.1 and 1).\n\n\n\n\nIn the graph above, we can see that Experiment 1, Group 3, Replicate 3 has an absorbance value similar to the blank readings. We have to determine if this is a real reading or if data collection errors such as pipetting mistakes have occured. In the example, we confirm with our “lab notes” that this well might not have been properly pipetted, and we exclude it:\n\ncolourimetric_df &lt;- colourimetric_df %&gt;% \n  filter(!(Experiment == \"Exp1\" & Group == \"Group3\" & Replicate == 3))\n\nWe replot the data:\n\nylimit &lt;- max(colourimetric_df$Absorbance)*1.1 # use the max absorbance value for upper y limit\nggplot(colourimetric_df, aes(x=Group, y=Absorbance, colour=Experiment, shape=as.factor(Replicate))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(aes(group = Experiment),\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x),\n               fun.max = function(x) mean(x) + sd(x),\n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(color = 'Experiment', shape = 'Replicate') +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nand we see that the exclusion worked as expected. This outlier is removed based on documented lab notes confirming a technical issue. Excluding data without a valid reason is cherry-picking and is not scientifically sound.\n\n\n\n\n\nIt depends.\n\nIf you are interested in absolute absorbance values - yes.\nIf there is significant background noise and it is also different between the plates (experiments), it can better to subtract the mean blank value per experiment to correct for plate inconsistencies. However, if you see inconsistencies between plates that you wouldn’t expect, (there is no technical reason for it), you should check your experimental set-up.\nIf the blank values are consistently low, there is minimal drift, and you are interested in relative comparisons between groups (or interpolating agains standard curve), subtraction may not be necessary.\n\nFor the example, we can try both:\n\nblank_means &lt;- colourimetric_df %&gt;%\n  filter(Group == \"Blank\") %&gt;%\n  group_by(Experiment) %&gt;%\n  summarise(BlankMean = mean(Absorbance))\n\ncolourimetric_df &lt;- colourimetric_df %&gt;%\n  left_join(blank_means, by = \"Experiment\") %&gt;%\n  mutate(Absorbance_Corrected = Absorbance - BlankMean) %&gt;%\n  filter(Group != \"Blank\")  # Remove blank values now that we have subtracted\n\n\n\n\n\nEach experiment contains technical replicates, which we average to obtain a single value per group per experiment. As we try with and without subtracting the blank reading, we average both.\n\ncolourimetric_df_meantechnical &lt;- colourimetric_df %&gt;%  \n  group_by(Experiment, Group) %&gt;%\n  summarise(AbsorbanceMeanCorrected = mean(Absorbance_Corrected),\n            AbsorbanceSDCorrected = sd(Absorbance_Corrected),\n            AbsorbanceMean = mean(Absorbance),\n            AbsorbanceSD = sd(Absorbance)\n            )\n\n`summarise()` has grouped output by 'Experiment'. You can override using the\n`.groups` argument.\n\n\n\n\n\nTo compare across experiments, we normalise all values relative to the control group (Group 1) within each experiment: As we try with and without subtracting the blank reading, we do it for both.\n\ncolourimetric_df_Normalised &lt;- colourimetric_df_meantechnical %&gt;%  \n  group_by(Experiment) %&gt;%\n  mutate(Normalised = AbsorbanceMean / AbsorbanceMean[Group == 'Group1'],\n         NormalisedCorrected = AbsorbanceMeanCorrected / AbsorbanceMeanCorrected[Group == 'Group1'])\n\n\n\n\nTo report results, we show the data point for each biological replicate as well as the mean and standard deviation.\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMean)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=Normalised)) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(y='FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_summary()`).\n\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_segment()`).\n\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMeanCorrected)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=NormalisedCorrected)) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(y='FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_summary()`).\n\n\nWarning: Removed 11 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\nAbsorbance value fold change (FC) to Group 1\n\n\n\n\n\n\n\nAbsorbance value fold change (FC) to Group 1 after subtracting the blank reading\n\n\n\n\n\nThe graph above displays the fold change relative to Group 1. Key observations: - Since Group 1 is the normalisation reference for each experiment, the mean value is always 1, and the standard deviation is 0, - When fold changes are less than, a standard y-axis can be misleading. Consider using a log2 transformation for clearer visualisation.\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMean)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=log2(Normalised))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  #scale_y_continuous(limits = c(0, log2(ylimit)))+\n  labs(y='log 2 FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMeanCorrected)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=log2(NormalisedCorrected))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  #scale_y_continuous(limits = c(0, log2(ylimit)))+\n  labs(y='log 2 FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\nlog2 FC of absorbance Values to Group 1\n\n\n\n\n\n\n\nlog2 FC of absorbance Values to Group 1 after subtracting the blank reading\n\n\n\n\n\n\n\n\nLet’s look at the values:\n\ncolourimetric_df_Normalised %&gt;% group_by(Group) %&gt;%\n  summarise(FC.mean = mean(Normalised),\n            FC.sd = sd(Normalised),\n            FC.blanksubtract.mean = mean(NormalisedCorrected),\n            FC.blanksubstract.sd = sd(NormalisedCorrected))\n\n# A tibble: 4 × 5\n  Group  FC.mean FC.sd FC.blanksubtract.mean FC.blanksubstract.sd\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;                 &lt;dbl&gt;                &lt;dbl&gt;\n1 Group1   1     0                     1                    0    \n2 Group2   0.957 0.136                 0.954                0.152\n3 Group3   1.14  0.174                 1.16                 0.198\n4 Group4   1.37  0.245                 1.41                 0.283\n\n\n\nGroup 1 (reference “control” group):\n\nBefore and after blank subtraction, the mean fold change remains exactly 1, with zero variance.\n\nThis confirms that normalisation was performed correctly.\n\nGroups 2-4:\n\nThe mean fold changes are very similar before and after blank subtraction.\n\nStandard deviations change slightly.\n\nIf the blank values were significantly contributing to absorbance variation, we would expect a larger shift in mean values and a reduction in standard deviations after subtraction.\n\nHere, the changes are small, suggesting that the blank readings did not introduce much noise in this example dataset.\nShould we subtract the blank?\n\nIf blank values are consistent and small, subtraction may not be necessary as it makes little difference.\n\nIf blanks show high variability, subtraction is essential to remove systematic errors.\n\nA good approach is to check both to see robustness.\n\n\n\n\n\n\nRaw data\n\nDoes it fall within expected range of the assay (linear range)?\nAre there outliers? - If yes, deal with them appropriately.\n\nIs blank subtraction necessary?\n\nIt depends.\nIf in doubt, try both.\n\nNormalisation choice:\n\nAlways normalise to a control that is expected to remain stable.\nNormalisation should reduce systematic technical noise while maintaining the true biological differences between groups.\n\nVisual Inspection:\nAlways plot raw, corrected, and normalized data to catch inconsistencies."
  },
  {
    "objectID": "colourimetric.html#setup",
    "href": "colourimetric.html#setup",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "First, load the necessary libraries.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "colourimetric.html#raw-data-and-quality-control",
    "href": "colourimetric.html#raw-data-and-quality-control",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "Load the raw data:\n\ncolourimetric_df &lt;- read.csv(\"example_data/colorimetric_example_tidy.csv\")\n\nglimpse(colourimetric_df)\n\nRows: 45\nColumns: 4\n$ Experiment &lt;chr&gt; \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Exp1\", \"Ex…\n$ Group      &lt;chr&gt; \"Group1\", \"Group1\", \"Group1\", \"Group2\", \"Group2\", \"Group2\",…\n$ Replicate  &lt;int&gt; 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,…\n$ Absorbance &lt;dbl&gt; 0.6790, 0.6650, 0.6560, 0.5430, 0.5380, 0.5830, 0.7560, 0.7…\n\n\nThe example data set are Absorbance values, the raw values from the plate reader. This example dataset contains data for three different experiments, four treatment groups. For each experiment and each group there are three technical replicates (pipetting replicates).\n\n\n\nsummary(colourimetric_df)\n\n  Experiment           Group             Replicate   Absorbance    \n Length:45          Length:45          Min.   :1   Min.   :0.0615  \n Class :character   Class :character   1st Qu.:1   1st Qu.:0.5380  \n Mode  :character   Mode  :character   Median :2   Median :0.6790  \n                                       Mean   :2   Mean   :0.5694  \n                                       3rd Qu.:3   3rd Qu.:0.7450  \n                                       Max.   :3   Max.   :0.9170  \n\n\nAny missing values should be examined to determine if they result from experimental errors. There are no missing values in the example data.\n\n\n\nTo see the distribution of absorbance values across different groups and experiments, plot:\n\nylimit &lt;- max(colourimetric_df$Absorbance)*1.1 # use the max absorbance value for upper y limit\nggplot(colourimetric_df, aes(x=Group, y=Absorbance, colour=Experiment, shape=as.factor(Replicate))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(aes(group = Experiment),\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x),\n               fun.max = function(x) mean(x) + sd(x),\n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  labs(color = 'Experiment', shape = 'Replicate') +\n  scale_y_continuous(limits = c(0, ylimit))+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nGraphing one point for each data point, using colours and shapes to distinguish between the experiments and the technical replicates. QC check: data falls within the linear range of the assay (in the example the linear range is between 0.1 and 1)."
  },
  {
    "objectID": "colourimetric.html#handling-outliers-and-exclusions",
    "href": "colourimetric.html#handling-outliers-and-exclusions",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "In the graph above, we can see that Experiment 1, Group 3, Replicate 3 has an absorbance value similar to the blank readings. We have to determine if this is a real reading or if data collection errors such as pipetting mistakes have occured. In the example, we confirm with our “lab notes” that this well might not have been properly pipetted, and we exclude it:\n\ncolourimetric_df &lt;- colourimetric_df %&gt;% \n  filter(!(Experiment == \"Exp1\" & Group == \"Group3\" & Replicate == 3))\n\nWe replot the data:\n\nylimit &lt;- max(colourimetric_df$Absorbance)*1.1 # use the max absorbance value for upper y limit\nggplot(colourimetric_df, aes(x=Group, y=Absorbance, colour=Experiment, shape=as.factor(Replicate))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(aes(group = Experiment),\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x),\n               fun.max = function(x) mean(x) + sd(x),\n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(color = 'Experiment', shape = 'Replicate') +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nand we see that the exclusion worked as expected. This outlier is removed based on documented lab notes confirming a technical issue. Excluding data without a valid reason is cherry-picking and is not scientifically sound."
  },
  {
    "objectID": "colourimetric.html#background-correction-subtracting-blank-values",
    "href": "colourimetric.html#background-correction-subtracting-blank-values",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "It depends.\n\nIf you are interested in absolute absorbance values - yes.\nIf there is significant background noise and it is also different between the plates (experiments), it can better to subtract the mean blank value per experiment to correct for plate inconsistencies. However, if you see inconsistencies between plates that you wouldn’t expect, (there is no technical reason for it), you should check your experimental set-up.\nIf the blank values are consistently low, there is minimal drift, and you are interested in relative comparisons between groups (or interpolating agains standard curve), subtraction may not be necessary.\n\nFor the example, we can try both:\n\nblank_means &lt;- colourimetric_df %&gt;%\n  filter(Group == \"Blank\") %&gt;%\n  group_by(Experiment) %&gt;%\n  summarise(BlankMean = mean(Absorbance))\n\ncolourimetric_df &lt;- colourimetric_df %&gt;%\n  left_join(blank_means, by = \"Experiment\") %&gt;%\n  mutate(Absorbance_Corrected = Absorbance - BlankMean) %&gt;%\n  filter(Group != \"Blank\")  # Remove blank values now that we have subtracted"
  },
  {
    "objectID": "colourimetric.html#averaging-technical-replicates",
    "href": "colourimetric.html#averaging-technical-replicates",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "Each experiment contains technical replicates, which we average to obtain a single value per group per experiment. As we try with and without subtracting the blank reading, we average both.\n\ncolourimetric_df_meantechnical &lt;- colourimetric_df %&gt;%  \n  group_by(Experiment, Group) %&gt;%\n  summarise(AbsorbanceMeanCorrected = mean(Absorbance_Corrected),\n            AbsorbanceSDCorrected = sd(Absorbance_Corrected),\n            AbsorbanceMean = mean(Absorbance),\n            AbsorbanceSD = sd(Absorbance)\n            )\n\n`summarise()` has grouped output by 'Experiment'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "colourimetric.html#normalisation",
    "href": "colourimetric.html#normalisation",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "To compare across experiments, we normalise all values relative to the control group (Group 1) within each experiment: As we try with and without subtracting the blank reading, we do it for both.\n\ncolourimetric_df_Normalised &lt;- colourimetric_df_meantechnical %&gt;%  \n  group_by(Experiment) %&gt;%\n  mutate(Normalised = AbsorbanceMean / AbsorbanceMean[Group == 'Group1'],\n         NormalisedCorrected = AbsorbanceMeanCorrected / AbsorbanceMeanCorrected[Group == 'Group1'])"
  },
  {
    "objectID": "colourimetric.html#summarising-across-biological-replicates",
    "href": "colourimetric.html#summarising-across-biological-replicates",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "To report results, we show the data point for each biological replicate as well as the mean and standard deviation.\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMean)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=Normalised)) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(y='FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_summary()`).\n\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_segment()`).\n\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMeanCorrected)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=NormalisedCorrected)) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  scale_y_continuous(limits = c(0, ylimit))+\n  labs(y='FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_summary()`).\n\n\nWarning: Removed 11 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\nAbsorbance value fold change (FC) to Group 1\n\n\n\n\n\n\n\nAbsorbance value fold change (FC) to Group 1 after subtracting the blank reading\n\n\n\n\n\nThe graph above displays the fold change relative to Group 1. Key observations: - Since Group 1 is the normalisation reference for each experiment, the mean value is always 1, and the standard deviation is 0, - When fold changes are less than, a standard y-axis can be misleading. Consider using a log2 transformation for clearer visualisation.\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMean)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=log2(Normalised))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  #scale_y_continuous(limits = c(0, log2(ylimit)))+\n  labs(y='log 2 FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\nylimit &lt;- max(colourimetric_df_Normalised$AbsorbanceMeanCorrected)*1.1\nggplot(colourimetric_df_Normalised, aes(x=Group, y=log2(NormalisedCorrected))) +\n  geom_point(position = position_dodge(0.3)) +\n  stat_summary(\n               fun = mean,\n               fun.min = function(x) mean(x) - sd(x), \n               fun.max = function(x) mean(x) + sd(x), \n               geom = \"pointrange\", size = 1, shape = 18,\n               colour = 'darkgrey', alpha = 0.75,\n               position = position_dodge(0.3)) +\n  #scale_y_continuous(limits = c(0, log2(ylimit)))+\n  labs(y='log 2 FC to Group 1')+\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\nlog2 FC of absorbance Values to Group 1\n\n\n\n\n\n\n\nlog2 FC of absorbance Values to Group 1 after subtracting the blank reading"
  },
  {
    "objectID": "colourimetric.html#subtracting-blank",
    "href": "colourimetric.html#subtracting-blank",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "Let’s look at the values:\n\ncolourimetric_df_Normalised %&gt;% group_by(Group) %&gt;%\n  summarise(FC.mean = mean(Normalised),\n            FC.sd = sd(Normalised),\n            FC.blanksubtract.mean = mean(NormalisedCorrected),\n            FC.blanksubstract.sd = sd(NormalisedCorrected))\n\n# A tibble: 4 × 5\n  Group  FC.mean FC.sd FC.blanksubtract.mean FC.blanksubstract.sd\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;                 &lt;dbl&gt;                &lt;dbl&gt;\n1 Group1   1     0                     1                    0    \n2 Group2   0.957 0.136                 0.954                0.152\n3 Group3   1.14  0.174                 1.16                 0.198\n4 Group4   1.37  0.245                 1.41                 0.283\n\n\n\nGroup 1 (reference “control” group):\n\nBefore and after blank subtraction, the mean fold change remains exactly 1, with zero variance.\n\nThis confirms that normalisation was performed correctly.\n\nGroups 2-4:\n\nThe mean fold changes are very similar before and after blank subtraction.\n\nStandard deviations change slightly.\n\nIf the blank values were significantly contributing to absorbance variation, we would expect a larger shift in mean values and a reduction in standard deviations after subtraction.\n\nHere, the changes are small, suggesting that the blank readings did not introduce much noise in this example dataset.\nShould we subtract the blank?\n\nIf blank values are consistent and small, subtraction may not be necessary as it makes little difference.\n\nIf blanks show high variability, subtraction is essential to remove systematic errors.\n\nA good approach is to check both to see robustness."
  },
  {
    "objectID": "colourimetric.html#qc-checkpoints-considerations",
    "href": "colourimetric.html#qc-checkpoints-considerations",
    "title": "Colourimetric Data Analysis",
    "section": "",
    "text": "Raw data\n\nDoes it fall within expected range of the assay (linear range)?\nAre there outliers? - If yes, deal with them appropriately.\n\nIs blank subtraction necessary?\n\nIt depends.\nIf in doubt, try both.\n\nNormalisation choice:\n\nAlways normalise to a control that is expected to remain stable.\nNormalisation should reduce systematic technical noise while maintaining the true biological differences between groups.\n\nVisual Inspection:\nAlways plot raw, corrected, and normalized data to catch inconsistencies."
  }
]